name: Create Bundle for All Platforms

on: 
  push:
    tags:
    - '*'

jobs:
  build_and_deploy:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Config Yarn Cache
        id: yarn-cache-restore
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn install
        run: yarn install --frozen-lockfile --non-interactive

      - name: Import Signing Certificate
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.DECP }}
        run: |
          security create-keychain -p "$CERTIFICATE_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$CERTIFICATE_PASSWORD" build.keychain
          echo "${{ secrets.DEVC }}" | base64 --decode > certificate.p12
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -k "$CERTIFICATE_PASSWORD" build.keychain

      - name: Build and Sign Electron App
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: yarn electron:bundle

      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "dist/*.dmg,dist/*.zip,dist/*.exe,dist/*.AppImage"
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Changes of ${{ github.ref_name }}:
            - TODO Changelog